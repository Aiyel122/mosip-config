## Follow properites have their values assigned via 'overrides' environment variables of config server docker.
## DO NOT define these in any of the property files.  They must be passed as env variables.  Refer to config-server
## helm chart:
## db.dbuser.password 
## mosip.mosip.partner.client.secret
## mosip.mosip.pms.client.secret
## keycloak.host
## keycloak.admin.password
## mosip.api.public.url

## Database
## Database hostname below is assuming postgres is running inside cluster in 'postgres' namespace
## If database is external to production, provide the DNS or ip of the host and port 
mosip.pmp.database.hostname=postgres-postgresql.postgres
mosip.pmp.database.port=5432
mosip.pmp.database.user=pmsuser
mosip.pmp.database.password=${db.dbuser.password}

mosip.activemq.url=http://activemq.default:80
mosip.admin-hotlist-service.url=http://admin-hotlist-service.default:80
mosip.admin-service.url=http://admin-service.default:80
mosip.admin-ui.url=http://admin-ui.default:80
mosip.artifactory-service.url=http://artifactory-service.default:80
mosip.clamav.url=http://clamav.default:80
mosip.config-server.url=http://config-server.default:80
mosip.datashare-service.url=http://datashare-service.default:80
mosip.healthcheck-app-service.url=http://healthcheck-app-service.default:80
mosip.ida-auth-service.url=http://ida-auth-service.default:80
mosip.ida-internal-service.url=http://ida-internal-service.default:80
mosip.ida-otp-service.url=http://ida-otp-service.default:80
mosip.idrepo-credential-request-generator.url=http://idrepo-credential-request-generator.default:80
mosip.idrepo-credential-service.url=http://idrepo-credential-service.default:80
mosip.idrepo-identity-service.url=http://idrepo-identity-service.default:80
mosip.idrepo-vid-service.url=http://idrepo-vid-service.default:80
mosip.kafka.url=http://kafka.default:80
mosip.kafka-headless.url=http://kafka-headless.default:80
mosip.kafka-zookeeper.url=http://kafka-zookeeper.default:80
mosip.kafka-zookeeper-headless.url=http://kafka-zookeeper-headless.default:80
mosip.kernel-auditmanager-service.url=http://kernel-auditmanager-service.default:80
mosip.kernel-auth-service.url=http://kernel-auth-service.default:80
mosip.kernel-idgenerator-service.url=http://kernel-idgenerator-service.default:80
mosip.kernel-keymanager-service.url=http://kernel-keymanager-service.default:80
mosip.kernel-masterdata-service.url=http://kernel-masterdata-service.default:80
mosip.kernel-notification-service.url=http://kernel-notification-service.default:80
mosip.kernel-otpmanager-service.url=http://kernel-otpmanager-service.default:80
mosip.kernel-pridgenerator-service.url=http://kernel-pridgenerator-service.default:80
mosip.kernel-ridgenerator-service.url=http://kernel-ridgenerator-service.default:80
mosip.kernel-syncdata-service.url=http://kernel-syncdata-service.default:80
mosip.keycloak.url=http://keycloak.default:80
mosip.kubernetes.url=http://kubernetes.default:80
mosip.minio.url=http://minio.default:80
mosip.mock-abis.url=http://mock-abis.default:80
mosip.mock-biosdk-service.url=http://mock-biosdk-service.default:80
mosip.mock-mv.url=http://mock-mv.default:80
mosip.pms-partner-manager-service.url=http://pms-partner-manager-service.default:80
mosip.pms-policy-manager-service.url=http://pms-policy-manager-service.default:80
mosip.pms-ui.url=http://pms-ui.default:80
mosip.postgres.url=http://postgres.default:80
mosip.prereg-application-service.url=http://prereg-application-service.default:80
mosip.prereg-batchjob-service.url=http://prereg-batchjob-service.default:80
mosip.prereg-booking-service.url=http://prereg-booking-service.default:80
mosip.prereg-captcha-service.url=http://prereg-captcha-service.default:80
mosip.prereg-datasync-service.url=http://prereg-datasync-service.default:80
mosip.prereg-ui.url=http://prereg-ui.default:80
mosip.print-service.url=http://print-service.default:80
mosip.regproc-manual-verification-stage.url=http://regproc-manual-verification-stage.default:80
mosip.regproc-notification-service.url=http://regproc-notification-service.default:80
mosip.regproc-registration-transaction-service.url=http://regproc-registration-transaction-service.default:80
mosip.regproc-reprocessor.url=http://regproc-reprocessor.default:80
mosip.regproc-securezone-notification-stage.url=http://regproc-securezone-notification-stage.default:80
mosip.regproc-workflowmanager.url=http://regproc-workflowmanager.default:80
mosip.resident-service.url=http://resident-service.default:80
mosip.service-hazelcast-server.url=http://service-hazelcast-server.default:80
mosip.softhsm-ida.url=http://softhsm-ida.default:80
mosip.softhsm-keymanager.url=http://softhsm-keymanager.default:80
mosip.ingress-nginx.url=http://ingress-nginx.default:80
mosip.kube-dns.url=http://kube-dns.default:80
mosip.dashboard-metrics-scraper.url=http://dashboard-metrics-scraper.default:80
mosip.kubernetes-dashboard.url=http://kubernetes-dashboard.default:80
mosip.elasticsearch-master.url=http://elasticsearch-master.default:80
mosip.elasticsearch-master-headless.url=http://elasticsearch-master-headless.default:80
mosip.graf-grafana.url=http://graf-grafana.default:80
mosip.kibana-kibana.url=http://kibana-kibana.default:80
mosip.metrics-server.url=http://metrics-server.default:80
mosip.prom-prometheus-alertmanager.url=http://prom-prometheus-alertmanager.default:80
mosip.prom-prometheus-node-exporter.url=http://prom-prometheus-node-exporter.default:80
mosip.prom-prometheus-pushgateway.url=http://prom-prometheus-pushgateway.default:80
mosip.prom-prometheus-server.url=http://prom-prometheus-server.default:80
mosip.packetmanager-service.url=http://packetmanager-service.default:80


## Auth device
mosip.authdevice.database.hostname=postgres-postgresql.postgres
mosip.authdevice.database.port=5432
mosip.authdevice.database.user=authdeviceuser
mosip.authdevice.database.password=${db.dbuser.password}

## Reg device
mosip.regdevice.database.hostname=postgres-postgresql.postgres
mosip.regdevice.database.port=5432
mosip.regdevice.database.user=regdeviceuser
mosip.regdevice.database.password=${db.dbuser.password}

## Hibernate
javax.persistence.jdbc.driverClassName=org.postgresql.Driver
javax.persistence.jdbc.driver=org.postgresql.Driver
javax.persistence.jdbc.url=jdbc:postgresql://${mosip.pmp.database.hostname}:${mosip.pmp.database.port}/mosip_pms
javax.persistence.jdbc.user=${mosip.pmp.database.user}
javax.persistence.jdbc.username=${mosip.pmp.database.user}
javax.persistence.jdbc.password=${mosip.pmp.database.password}
javax.persistence.jdbc.schema = pms
javax.persistence.jdbc.uinHashTable=uin_hash_salt
javax.persistence.jdbc.uinEncryptTable=uin_encrypt_salt

## Hibernate Auth device
mosip.datasource.authdevice.jdbc.driver=org.postgresql.Driver
mosip.datasource.authdevice.jdbc.url = jdbc:postgresql://${mosip.authdevice.database.hostname}:${mosip.authdevice.database.port}/mosip_authdevice
mosip.datasource.authdevice.jdbc.password = ${mosip.authdevice.database.password}
mosip.datasource.authdevice.jdbc.user = ${mosip.authdevice.database.user}
mosip.datasource.authdevice.jdbc.schema = authdevice
mosip.datasource.authdevice.hibernate.dialect=org.hibernate.dialect.PostgreSQL95Dialect

## Hibernate Reg device
mosip.datasource.regdevice.jdbc.driver=org.postgresql.Driver
mosip.datasource.regdevice.jdbc.url = jdbc:postgresql://${mosip.regdevice.database.hostname}:${mosip.regdevice.database.port}/mosip_regdevice
mosip.datasource.regdevice.jdbc.password = ${mosip.regdevice.database.password}
mosip.datasource.regdevice.jdbc.user = ${mosip.regdevice.database.user}
mosip.datasource.regdevice.jdbc.schema = regdevice
mosip.datasource.regdevice.hibernate.dialect=org.hibernate.dialect.PostgreSQL95Dialect

hibernate.dialect=org.hibernate.dialect.PostgreSQL95Dialect
hibernate.jdbc.lob.non_contextual_creation=true
hibernate.hbm2ddl.auto=none
hibernate.show_sql=true
hibernate.format_sql=true
hibernate.connection.charSet=utf8
hibernate.cache.use_second_level_cache=false
hibernate.cache.use_query_cache=false
hibernate.cache.use_structured_entries=false
hibernate.generate_statistics=false
spring.datasource.initialization-mode=never

## Application ID of PMP. Used to upload other domain certs
application.id=PARTNER
application.name=partner

## To configure starting value or initial value of mispId.
## ex: if value = 3 ==> mispId starts from  100
## if value = 4 ==> mispId starts from 1000
mosip.kernel.mispid.length = 3
mosip.kernel.idgenerator.misp.license-key-length = 50
## To configure the partner types for which extractors are required. It should be "," separated.
pmp.bioextractors.required.partner.types = Credential_Partner,Online_Verification_Partner
mosip.pmp.misp.license.expiry.period.indays = 90
mosip.pmp.partner.policy.expiry.period.indays = 90
pmp.policy.expiry.period.indays = 180
pmp.policy.schema.url= https://schemas.mosip.io/v1/auth-policy

## To configure what are the allowed policy types.
## If we add any new policy type, corresponding schema also needs to be added.
## format for adding schema configuration for new policy type is as below
## pmp.policyTypeName.policy.schema(all are in lowercase)= schema url
pmp.allowed.policy.types=Auth,DataShare,CredentialIssuance
pmp.auth.policy.schema = ${mosip.kernel.xsdstorage-uri}auth-policy-schema.json
pmp.datashare.policy.schema=${mosip.kernel.xsdstorage-uri}data-share-policy-schema.json
pmp.credentialissuance.policy.schema=${mosip.kernel.xsdstorage-uri}data-share-policy-schema.json

pmp.misp.valid.email.address.regex=^[\\w-\\+]+(\\.[\\w]+)*@[\\w-]+(\\.[\\w]+)*(\\.[a-z]{2,})$
pmp.partner.valid.email.address.regex=^[\\w-\\+]+(\\.[\\w]+)*@[\\w-]+(\\.[\\w]+)*(\\.[a-z]{2,})$
pmp.partner.partnerId.max.length=36
pmp.partner.mobileNumbe.max.length=16

## Time difference between request creation and request processing
masterdata.registerdevice.timestamp.validate=+5

## Keymanager
keymanager.base.url=http://keymanager.keymanager
mosip.kernel.sign-url=${keymanager.base.url}/v1/keymanager/jwtSign

## Kernel services
mosip.kernel.masterdata.audit-url=http://auditmanager.kernel/v1/auditmanager/audits

mosip.secret.mosip-admin-client=7Bb4eF/TkGMdyVMPf/KzyB06qcZeBq/pCS0Y0vKUtr0=
mosip.secret.mosip-auth-client=vmF7pYf1W1zuuH7GZUXhnUO7Q/uqFmY8hfnc5774ou4=
mosip.secret.mosip-prereg-client=vmF7pYf1W1zuuH7GZUXhnUO7Q/uqFmY8hfnc5774ou4=
mosip.secret.mosip-prereg-client=vmF7pYf1W1zuuH7GZUXhnUO7Q/uqFmY8hfnc5774ou4=
mosip.secret.mosip-regproc-client=vmF7pYf1W1zuuH7GZUXhnUO7Q/uqFmY8hfnc5774ou4=
mosip.secret.mosip-ida-client=vmF7pYf1W1zuuH7GZUXhnUO7Q/uqFmY8hfnc5774ou4=
mosip.secret.mosip-reg-client=vmF7pYf1W1zuuH7GZUXhnUO7Q/uqFmY8hfnc5774ou4=
mosip.secret.mosip-misp-client=vmF7pYf1W1zuuH7GZUXhnUO7Q/uqFmY8hfnc5774ou4=
mosip.secret.mosip-partner-client=vmF7pYf1W1zuuH7GZUXhnUO7Q/uqFmY8hfnc5774ou4=
mosip.secret.mosip-policymanager-client=vmF7pYf1W1zuuH7GZUXhnUO7Q/uqFmY8hfnc5774ou4=
mosip.secret.mosip-partnermanager-client=vmF7pYf1W1zuuH7GZUXhnUO7Q/uqFmY8hfnc5774ou4=
mosip.secret.mosip-resident-client=vmF7pYf1W1zuuH7GZUXhnUO7Q/uqFmY8hfnc5774ou4=
mosip.secret.mosip-admin-services-client=vmF7pYf1W1zuuH7GZUXhnUO7Q/uqFmY8hfnc5774ou4=
mosip.secret.mosip-crereq-client=vmF7pYf1W1zuuH7GZUXhnUO7Q/uqFmY8hfnc5774ou4=
mosip.secret.mosip-creser-client=vmF7pYf1W1zuuH7GZUXhnUO7Q/uqFmY8hfnc5774ou4=
mosip.secret.mosip-datsha-client=vmF7pYf1W1zuuH7GZUXhnUO7Q/uqFmY8hfnc5774ou4=
mosip.secret.mosip-abis-client=vmF7pYf1W1zuuH7GZUXhnUO7Q/uqFmY8hfnc5774ou4=
mosip.secret.mosip-creser-idpass-client=vmF7pYf1W1zuuH7GZUXhnUO7Q/uqFmY8hfnc5774ou4=
mosip.secret.mosip-pms-client=vmF7pYf1W1zuuH7GZUXhnUO7Q/uqFmY8hfnc5774ou4=

# ApplicationId for partner
mosip.pmp.auth.appId =partner
# Kernel auth client ID for partner management services
mosip.pmp.auth.clientId=mosip-partner-client
# Kernel auth secret key for partner management services
mosip.pmp.auth.secretKey= ${mosip.secret.mosip-partnermanager-client}
# Key manager service API's to upload certificates
pms.cert.service.token.request.clientId=${mosip.pmp.auth.clientId}
pms.cert.service.token.request.issuerUrl=${mosip.kernel-auth-service.url}/v1/authmanager/authenticate/clientidsecretkey
pmp.ca.certificaticate.upload.rest.uri=${keymanager.base.url}/v1/keymanager/uploadCACertificate
pmp.partner.certificaticate.upload.rest.uri=${keymanager.base.url}/v1/keymanager/uploadPartnerCertificate
pmp.partner.certificaticate.get.rest.uri=${keymanager.base.url}/v1/keymanager/getPartnerCertificate/{partnerCertId}
pmp-keymanager.upload.other.domain.cert.rest.uri=${keymanager.base.url}/v1/keymanager/uploadOtherDomainCertificate

#Auth token generation
mosip.iam.adapter.clientid=${mosip.pmp.auth.clientId}
mosip.iam.adapter.clientsecret=${mosip.secret.mosip-partnermanager-client}
mosip.iam.adapter.appid=${mosip.pmp.auth.appId}

# Used to get data share url to publish to websub
pmp.certificaticate.datashare.rest.uri=${mosip.datashare-service.url}/v1/datashare/create
# Used for generating the datashare url
pms.certs.datashare.policyId=mpolicy-default-cert
pms.certs.datashare.subscriberId=mpartner-default-cert

## Keycloak
# These configurations are used to create user in keycloak and map to a role.
# Pre-Condition: All partner types should be created as roles in keycloak.
mosip.iam.base-url=${keycloak.host}
mosip.iam.realm.operations.base-url = ${mosip.iam.base-url}/auth/admin/realms/{realmId}
mosip.iam.admin-url =${mosip.iam.base-url}/auth/admin/
mosip.iam.admin-realm-id =admin
mosip.iam.roles-extn-url =realms/mosip/roles
mosip.iam.users-extn-url = realms/mosip/users
mosip.iam.role-user-mapping-url =/{userId}/role-mappings/realm
mosip.iam.open-id-url =${mosip.iam.base-url}/auth/realms/{realmId}/protocol/openid-connect/
mosip.iam.master.realm-id=master
mosip.iam.default.realm-id=mosip
mosip.keycloak.admin.client.id=admin-cli
mosip.keycloak.admin.user.id=admin
mosip.keycloak.admin.secret.key=${keycloak.admin.password}

## Auth adapter
auth.server.validate.url=${mosip.kernel-auth-service.url}/v1/authmanager/authorize/admin/validateToken
auth.server.admin.validate.url=${mosip.kernel-auth-service.url}/v1/authmanager/authorize/admin/validateToken
auth.server.admin.allowed.audience=mosip-creser-client,mosip-datsha-client,mosip-ida-client,mosip-regproc-client,mosip-admin-client,mosip-reg-client,mosip-pms-client,mosip-resident-client
auth.jwt.secret=authjwtsecret
auth.jwt.base=Mosip-Token


#To populate required roles which should be allowed in UI.(Roles are nothing but partner types)
mosip.pms.ui.required.roles=AUTH_PARTNER,DEVICE_PROVIDER,CREDENTIAL_PARTNER,FTM_PROVIDER,MISP_PARTNER,PARTNERMANAGER,POLICYMANAGER,PARTNER_ADMIN

# To configure misp partner type
mosip.pms.misp.partner.type=MISP_Partner

# Role for partner admin =
mosip.pms.partneradmin.role=PARTNER_ADMIN

#To populate required roles which should be allowed in UI.(Roles are nothing but partner types)
mosip.pms.ui.required.roles=AUTH_PARTNER,DEVICE_PROVIDER,CREDENTIAL_PARTNER,FTM_PROVIDER,MISP_PARTNER,PARTNERMANAGER,POLICYMANAGER,PARTNER_ADMIN
# To configure misp partner type
mosip.pms.misp.partner.type=MISP_Partner
# Role for partner admin =
mosip.pms.partneradmin.role=PARTNER_ADMIN

## Security
mosip.security.csrf-enable:false
mosip.security.secure-cookie:false

partner.search.maximum.rows=10

## Allowed credential types which partner can map against to policy
pmp.allowed.credential.types=auth,qrcode,euin,reprint

## Allowed partner types who can map policies to credential types
policy.credential.type.mapping.allowed.partner.types=Credential_Partner,Online_Verification_Partner

## Allowed kyc attributes. Used to display in UI
policy.allowed.kyc.attributes = {"fullName": "Full Name","middleName": "Middle Name","lastName": "Last Name","dateOfBirth": "DateOfBirth","gender": "Gender","phone": "phone"}
## Used to display in UI
policy.auth.allowed.token.types=random,partner,policy

# IAM
mosip.iam.module.login_flow.name=authorization_code
mosip.iam.module.clientID=mosip-pms-client
mosip.iam.module.clientsecret=${mosip.secret.mosip-partnermanager-client}
mosip.iam.module.redirecturi=https://${mosip.api.public.host}/v1/partnermanager/login-redirect/
mosip.iam.module.login_flow.scope=cls
mosip.iam.module.login_flow.response_type=code
mosip.iam.authorization_endpoint=${keycloak.host}/auth/realms/mosip/protocol/openid-connect/auth
mosip.iam.module.admin_realm_id=mosip
mosip.pms.filtervalue.max_columns =100
mosip.iam.token_endpoint=${keycloak.host}/auth/realms/mosip/protocol/openid-connect/token

## Unused properties. TODO: delete them once they are removed from code
pmp.policy.allowed.authtokens.types=random,partner,policy
mosip.kernel.device.search-url=http://masterdata.kernel/v1/masterdata/devices/search
token.request.appid=admin
token.request.password=mosip
token.request.username=110005
token.request.version=string
token.request.id=v1
token.request.issuerUrl=${mosip.kernel-auth-service.url}/v1/authmanager/authenticate/clientidsecretkey
token.request.clientId=admin
PASSWORDBASEDTOKENAPI=${mosip.kernel-auth-service.url}/v1/authmanager/authenticate/useridPwd
application.env.local=false

# Notifications
emailResourse.url=${mosip.kernel-notification-service.url}/v1/notifier/email/send
resource.template.url=${mosip.kernel-masterdata-service.url}/v1/masterdata/templates/{langcode}/{templatetypecode}
notifications.sent.before.days = 3
partner.registration.sub-template = partner-reg-sub-template
partner.reg.content-template=partner-reg-content-template
partner.status.sub-template=partner-status-sub-template
partner.status.content-template=partner-status-content-template
partner.apikey.status.sub-template=partner-apikey-status-sub-template
apikey.status.content-template=apikey-status-content-template
pms.notifications-schedule.init-delay = 24
pms.notifications-schedule.fixed-rate=24

## Roles
mosip.role.pms.postpoliciesgroupnew=PARTNER_ADMIN,POLICYMANAGER
mosip.role.pms.putpoliciesgrouppolicygroupid=PARTNER_ADMIN,POLICYMANAGER
mosip.role.pms.postpolicies=PARTNER_ADMIN,POLICYMANAGER
mosip.role.pms.postpoliciespolicyidgrouppublish=PARTNER_ADMIN,POLICYMANAGER
mosip.role.pms.putpoliciespolicyid=PARTNER_ADMIN,POLICYMANAGER
mosip.role.pms.patchpoliciespolicyidgrouppolicygroupid=PARTNER_ADMIN,POLICYMANAGER
mosip.role.pms.getpolicies=PARTNER_ADMIN,POLICYMANAGER
mosip.role.pms.getpoliciespolicyid=PARTNER_ADMIN,POLICYMANAGER
mosip.role.pms.getpoliciesapikey=PARTNER_ADMIN,POLICYMANAGER
mosip.role.pms.getpoliciespolicyidpartnerpartnerid=PARTNER_ADMIN,POLICYMANAGER
mosip.role.pms.getpoliciesgrouppolicygroupid=PARTNER_ADMIN,POLICYMANAGER
mosip.role.pms.getpoliciesgroupall=PARTNER_ADMIN,POLICYMANAGER
mosip.role.pms.postpoliciesgroupsearch=PARTNER_ADMIN,AUTH_PARTNER,CREDENTIAL_PARTNER,PARTNER_ADMIN,POLICYMANAGER
mosip.role.pms.postpoliciessearch=PARTNER_ADMIN,POLICYMANAGER
mosip.role.pms.getpoliciesconfigkey=PARTNER_ADMIN,POLICYMANAGER
mosip.role.pms.postpoliciesgroupfiltervalues=PARTNER_ADMIN,PMS_USER,AUTH_PARTNER,CREDENTIAL_PARTNER,POLICYMANAGER,PARTNER
mosip.role.pms.postpoliciesfiltervalues=PARTNER_ADMIN,PMS_USER,AUTH_PARTNER,CREDENTIAL_PARTNER,POLICYMANAGER,PARTNER
mosip.role.pms.getactivegroupgroupname=AUTH_PARTNER,CREDENTIAL_PARTNER,PARTNER_ADMIN,ONLINE_VERIFICATION_PARTNER,ABIS_PARTNER,MANUAL_ADJUDICATION,POLICYMANAGER
mosip.role.pms.postdevicedetail=PARTNER_ADMIN,DEVICE_PROVIDER,FTM_PROVIDER
mosip.role.pms.putdevicedetail=PARTNER_ADMIN,DEVICE_PROVIDER,FTM_PROVIDER
mosip.role.pms.patchdevicedetail=PARTNER_ADMIN
mosip.role.pms.postdevicedetailsearch=PARTNER_ADMIN,DEVICE_PROVIDER,FTM_PROVIDER
mosip.role.pms.postdevicedetaildevicetypesearch=PARTNER_ADMIN,DEVICE_PROVIDER,FTM_PROVIDER
mosip.role.pms.postdevicedetailfiltervalues=PARTNER_ADMIN,DEVICE_PROVIDER,FTM_PROVIDER
mosip.role.pms.postdevicedetaildevicetypefiltervalues=PARTNER_ADMIN,DEVICE_PROVIDER,FTM_PROVIDER
mosip.role.pms.postdevicedetaildevicesubtypefiltervalues=PARTNER_ADMIN,FTM_PROVIDER,DEVICE_PROVIDER
mosip.role.pms.postdeviceprovidermanagementvalidate=ZONAL_ADMIN,ID_AUTHENTICATION,REGISTRATION_PROCESSOR,RESIDENT
mosip.role.pms.postftpchipdetail=PARTNER_ADMIN,FTM_PROVIDER
mosip.role.pms.putftpchipdetail=PARTNER_ADMIN,FTM_PROVIDER
mosip.role.pms.patchftpchipdetail=PARTNER_ADMIN
mosip.role.pms.postftpchipdetailuploadcertificate=PARTNER_ADMIN,FTM_PROVIDER
mosip.role.pms.getftpchipdetailgetpartnercertificate=PARTNER_ADMIN,FTM_PROVIDER
mosip.role.pms.postftpchipdetailsearch=PARTNER_ADMIN,FTM_PROVIDER
mosip.role.pms.postregistereddevices=PARTNER_ADMIN,FTM_PROVIDER,ZONAL_ADMIN
mosip.role.pms.postregistereddevicesderegister=PARTNER_ADMIN,FTM_PROVIDER,ZONAL_ADMIN
mosip.role.pms.postregistereddevicessearch=PARTNER,FTM_PROVIDER,PMS_USER,AUTH_PARTNER,DEVICE_PROVIDER,CREDENTIAL_PARTNER,CREDENTIAL_ISSUANCE,CREATE_SHARE,ID_AUTHENTICATION
mosip.role.pms.postsecurebiometricinterface=PARTNER_ADMIN,FTM_PROVIDER,DEVICE_PROVIDER
mosip.role.pms.putsecurebiometricinterface=PARTNER_ADMIN,FTM_PROVIDER,DEVICE_PROVIDER
mosip.role.pms.patchsecurebiometricinterface=PARTNER_ADMIN
mosip.role.pms.postsecurebiometricinterfacesearch=PARTNER_ADMIN,FTM_PROVIDER,DEVICE_PROVIDER
mosip.role.pms.postpartners=PARTNER,PARTNER_ADMIN,AUTH_PARTNER,CREDENTIAL_PARTNER
mosip.role.pms.patchpartnerspartneridapikeyrequest=PARTNER_ADMIN,AUTH_PARTNER,PARTNER,ONLINE_VERIFICATION_PARTNER,CREDENTIAL_PARTNER
mosip.role.pms.postpartnerspartneridbioextractorspolicyid=CREATE_SHARE,PARTNER,PARTNER_ADMIN,ONLINE_VERIFICATION_PARTNER,CREDENTIAL_ISSUANCE,CREDENTIAL_PARTNER
mosip.role.pms.getpartnerspartneridbioextractorspolicyid=CREATE_SHARE,PARTNER,PARTNER_ADMIN,ONLINE_VERIFICATION_PARTNER,CREDENTIAL_ISSUANCE,CREDENTIAL_PARTNER
mosip.role.pms.postpartnerspartneridcredentialtypepolicyid=CREATE_SHARE,PARTNER,PARTNER_ADMIN,ONLINE_VERIFICATION_PARTNER,CREDENTIAL_ISSUANCE,CREDENTIAL_PARTNER
mosip.role.pms.getpartnerspartneridcredentialtypepolicies=CREATE_SHARE,PARTNER,PARTNER_ADMIN,ONLINE_VERIFICATION_PARTNER,CREDENTIAL_ISSUANCE,CREDENTIAL_PARTNER
mosip.role.pms.postpartnerspartneridcontactadd=CREATE_SHARE,PARTNER,PARTNER_ADMIN,ONLINE_VERIFICATION_PARTNER,CREDENTIAL_ISSUANCE,CREDENTIAL_PARTNER
mosip.role.pms.putpartnerspartnerid=PARTNER,PARTNER_ADMIN,ONLINE_VERIFICATION_PARTNER,CREDENTIAL_ISSUANCE,AUTH_PARTNER
mosip.role.pms.getpartnerspartnerid=PARTNER,PARTNER_ADMIN,ONLINE_VERIFICATION_PARTNER,CREDENTIAL_ISSUANCE,AUTH_PARTNER,RESIDENT
mosip.role.pms.getpartnerspartneridapikeyrequest=PARTNER,PARTNER_ADMIN,ONLINE_VERIFICATION_PARTNER,CREDENTIAL_ISSUANCE,AUTH_PARTNER
mosip.role.pms.getpartnerspartneridapikeyapikeyreqid=PARTNER,PARTNER_ADMIN,ONLINE_VERIFICATION_PARTNER,CREDENTIAL_ISSUANCE,AUTH_PARTNER
mosip.role.pms.postpartnerscertificatecaupload=PARTNER_ADMIN,FTM_PROVIDER,AUTH_PARTNER,PMS_USER,ONLINE_VERIFICATION_PARTNER,PARTNERMANAGER
mosip.role.pms.postpartnerscertificateupload=PARTNER_ADMIN,PARTNER_ADMIN,FTM_PROVIDER,AUTH_PARTNER,PMS_USER,ONLINE_VERIFICATION_PARTNER,PARTNERMANAGER,ID_AUTHENTICATION,CREDENTIAL_ISSUANCE,CREDENTIAL_PARTNER
mosip.role.pms.getpartnerspartneridcertificate=PARTNER_ADMIN,FTM_PROVIDER,PMS_USER,AUTH_PARTNER,DEVICE_PROVIDER,CREDENTIAL_PARTNER,CREDENTIAL_ISSUANCE,CREATE_SHARE,ID_AUTHENTICATION,ONLINE_VERIFICATION_PARTNER
mosip.role.pms.postpartnerssearch=PARTNER_ADMIN,FTM_PROVIDER,PMS_USER,AUTH_PARTNER,DEVICE_PROVIDER,CREDENTIAL_PARTNER,CREDENTIAL_ISSUANCE,CREATE_SHARE,ID_AUTHENTICATION,ONLINE_VERIFICATION_PARTNER
mosip.role.pms.postpartnerspartnertypesearch=PARTNER_ADMIN,FTM_PROVIDER,PMS_USER,AUTH_PARTNER,DEVICE_PROVIDER,CREDENTIAL_PARTNER,CREDENTIAL_ISSUANCE,CREATE_SHARE,ID_AUTHENTICATION,ONLINE_VERIFICATION_PARTNER
mosip.role.pms.postpartnersfiltervalues=PARTNER_ADMIN,PARTNER,ONLINE_VERIFICATION_PARTNER
mosip.role.pms.postpartnersapikeyrequestfiltervalues=PARTNER_ADMIN,FTM_PROVIDER,PARTNER,AUTH_PARTNER,CREDENTIAL_PARTNER
mosip.role.pms.postpartnersapikeyrequestsearch=PARTNER_ADMIN,FTM_PROVIDER,PARTNER,AUTH_PARTNER,CREDENTIAL_PARTNER,DEVICE_PROVIDER,PMS_USER,ONLINE_VERIFICATION_PARTNER
mosip.role.pms.postpartnersapikeysearch=PARTNER_ADMIN,FTM_PROVIDER,PARTNER,AUTH_PARTNER,CREDENTIAL_PARTNER,DEVICE_PROVIDER,ONLINE_VERIFICATION_PARTNER,PMS_USER
mosip.role.pms.putpartnerspartneridapikeypolicies=PARTNERMANAGER,PARTNER_ADMIN
mosip.role.pms.patchpartnerspartnerid=PARTNERMANAGER,PARTNER_ADMIN
mosip.role.pms.patchpartnerspartneridapikey=PARTNERMANAGER,PARTNER_ADMIN
mosip.role.pms.getpartnerspartneridapikeymisplicensekey=PARTNERMANAGER,PARTNER_ADMIN,ID_AUTHENTICATION,CREDENTIAL_ISSUANCE
mosip.role.pms.patchpartnersapikey=PARTNERMANAGER,PARTNER_ADMIN
mosip.role.pms.getpartners=REGISTRATION_PROCESSOR,RESIDENT,PARTNER_ADMIN,ID_AUTHENTICATION,CREDENTIAL_ISSUANCE,PARTNERMANAGER
mosip.role.pms.getpartnerspartneridapikey=PARTNERMANAGER,PARTNER_ADMIN
mosip.role.pms.getpartnersapikey=PARTNERMANAGER,PARTNER_ADMIN
mosip.role.pms.getpartnersapikeykey=PARTNER_ADMIN,PARTNERMANAGER
mosip.role.pms.postmisps=PARTNER_ADMIN,MISP_PARTNER,MISP,PARTNERMANAGER
mosip.role.pms.putmisps=PARTNER_ADMIN,MISP_PARTNER,MISP,PARTNERMANAGER
mosip.role.pms.getmisps=PARTNER_ADMIN,MISP_PARTNER,MISP,PARTNERMANAGER
mosip.role.pms.getmispsmispidlicensekey=PARTNER_ADMIN,MISP_PARTNER,MISP,PARTNERMANAGER

partner.register.as.user.in.iam.enable=false
